"""
Type stubs for requests module
"""

from typing import Any, Dict, List, Optional, Union, IO, TextIO

def get(url: str, **kwargs: Any) -> "Response": ...
def post(url: str, **kwargs: Any) -> "Response": ...
def put(url: str, **kwargs: Any) -> "Response": ...
def delete(url: str, **kwargs: Any) -> "Response": ...
def head(url: str, **kwargs: Any) -> "Response": ...
def options(url: str, **kwargs: Any) -> "Response": ...
def patch(url: str, **kwargs: Any) -> "Response": ...

class Response:
    def __init__(self) -> None: ...
    @property
    def status_code(self) -> int: ...
    @property
    def text(self) -> str: ...
    @property
    def content(self) -> bytes: ...
    @property
    def headers(self) -> Dict[str, str]: ...
    @property
    def url(self) -> str: ...
    def json(self, **kwargs: Any) -> Any: ...
    def raise_for_status(self) -> None: ...

class Session:
    def __init__(self) -> None: ...
    def get(self, url: str, **kwargs: Any) -> Response: ...
    def post(self, url: str, **kwargs: Any) -> Response: ...
    def put(self, url: str, **kwargs: Any) -> Response: ...
    def delete(self, url: str, **kwargs: Any) -> Response: ...
    def head(self, url: str, **kwargs: Any) -> Response: ...
    def options(self, url: str, **kwargs: Any) -> Response: ...
    def patch(self, url: str, **kwargs: Any) -> Response: ...

class RequestException(Exception): ...
class HTTPError(RequestException): ...
class ConnectionError(RequestException): ...
class Timeout(RequestException): ...
class TooManyRedirects(RequestException): ... 